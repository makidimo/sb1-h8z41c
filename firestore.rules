rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the document belongs to the current user
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection and its subcollections
    match /users/{userId} {
      // Allow read/write if the document belongs to the authenticated user
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      // Story subcollection
      match /story/{storyId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
      
      // Assessment subcollection
      match /assessment/{assessmentId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
      
      // Results subcollection
      match /results/{resultId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Results collection (top-level)
    match /results/{resultId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}